--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.7) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then v19=v0(v3(v30,1,1));return "";else local v85=v2(v0(v30,16));if v19 then local v110=v5(v85,v19);v19=nil;return v110;else return v85;end end end);local function v20(v31,v32,v33) if v33 then local v86=0 -0 ;local v87;while true do if (v86==(0 -0)) then v87=(v31/(2^(v32-((1835 -(892 + 65)) -(282 + (1419 -824))))))%((1639 -(1523 + 114))^(((v33-(1 -0)) -(v32-((2 + 0) -1))) + (620 -(555 + 64)))) ;return v87-(v87%(932 -(857 + 74))) ;end end else local v88=(1067 -(68 + 222 + 775))^(v32-(569 -(367 + 201))) ;return (((v31%(v88 + v88))>=v88) and ((1703 -775) -(214 + 713))) or ((350 -(87 + 263)) + 0) ;end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35,v36=v1(v16,v18,v18 + (182 -(67 + 113)) );v18=v18 + 2 + 0 ;return (v36 * (628 -372)) + v35 ;end local function v23() local v37,v38,v39,v40=v1(v16,v18,v18 + 3 + 0 );v18=v18 + (15 -11) ;return (v40 * ((12212644 + 4565524) -(802 + 150))) + (v39 * (176444 -110908)) + (v38 * (464 -208)) + v37 ;end local function v24() local v41=v23();local v42=v23();local v43=998 -((1345 -(44 + 386)) + 82) ;local v44=(v20(v42,2 -(1487 -(998 + 488)) ,4 + 8 + 8 ) * (2^(41 -9))) + v41 ;local v45=v20(v42,1208 -(1069 + 118) ,70 -39 );local v46=((v20(v42,69 -37 )==1) and  -1) or (1 + 0) ;if (v45==0) then if (v44==(0 + 0)) then return v46 * (0 -0) ;else v45=(1 -0) + 0 ;v43=791 -(368 + 423) ;end elseif (v45==(6433 -(5158 -(201 + 571)))) then return ((v44==((456 -(145 + 293)) -((41 -31) + 8))) and (v46 * ((3 -(2 + 0))/(442 -(416 + 26))))) or (v46 * NaN) ;end return v8(v46,v45-(3266 -2243) ) * (v43 + (v44/((1 + 1)^52))) ;end local function v25(v47) local v48;if  not v47 then v47=v23();if (v47==(0 -0)) then return "";end end v48=v3(v16,v18,(v18 + v47) -(3 -2) );v18=v18 + v47 ;local v49={};for v65=1, #v48 do v49[v65]=v2(v1(v3(v48,v65,v65)));end return v6(v49);end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v50=(function() return function(v89,v90,v91,v92,v93,v94,v95,v96) local v89=(function() return 0;end)();local v90=(function() return;end)();local v91=(function() return;end)();while true do if (v89~= #"~") then else if (v90== #",") then v91=(function() return v92()~=0 ;end)();elseif (v90==(810 -(740 + 68))) then v91=(function() return v93();end)();elseif (v90== #"-19") then v91=(function() return v94();end)();end v95[v96]=(function() return v91;end)();break;end if (v89==(0 + 0)) then local v116=(function() return 836 -(660 + 176) ;end)();local v117=(function() return;end)();while true do if (0==v116) then v117=(function() return 0 + 0 ;end)();while true do if (v117==(203 -(14 + 188))) then v89=(function() return  #"[";end)();break;end if (v117==0) then v90=(function() return v92();end)();v91=(function() return nil;end)();v117=(function() return 676 -(534 + 141) ;end)();end end break;end end end end return v89,v90,v91,v92,v93,v94,v95,v96;end;end)();local v51=(function() return function(v97,v98,v99) local v100=(function() return 0;end)();local v101=(function() return;end)();while true do if (v100==(0 + 0)) then v101=(function() return 0;end)();while true do if (v101~=0) then else v97[v98-#"!" ]=(function() return v99();end)();return v97,v98,v99;end end break;end end end;end)();local v52=(function() return {};end)();local v53=(function() return {};end)();local v54=(function() return {};end)();local v55=(function() return {v52,v53,nil,v54};end)();local v56=(function() return v23();end)();local v57=(function() return {};end)();for v67= #"|",v56 do FlatIdent_76979,Type,Cons,v21,v24,v25,v57,v67=(function() return v50(FlatIdent_76979,Type,Cons,v21,v24,v25,v57,v67);end)();end v55[ #"xnx"]=(function() return v21();end)();for v68= #"\\",v23() do local v69=(function() return v21();end)();if (v20(v69, #"!", #",")~=0) then else local v105=(function() return 0 + 0 ;end)();local v106=(function() return;end)();local v107=(function() return;end)();local v108=(function() return;end)();local v109=(function() return;end)();while true do if (v105~=(1 + 0)) then else v108=(function() return nil;end)();v109=(function() return nil;end)();v105=(function() return 2;end)();end if ((0 -0)==v105) then local v118=(function() return 0;end)();while true do if (v118==1) then v105=(function() return 1;end)();break;end if (v118==0) then local v120=(function() return 0 -0 ;end)();while true do if (1==v120) then v118=(function() return 2 -1 ;end)();break;end if ((0 + 0)~=v120) then else v106=(function() return 0;end)();v107=(function() return nil;end)();v120=(function() return 1 + 0 ;end)();end end end end end if (v105~=(398 -(115 + 281))) then else while true do if (v106== #"asd") then if (v20(v108, #"-19", #"asd")~= #".") then else v109[ #".dev"]=(function() return v57[v109[ #".dev"]];end)();end v52[v68]=(function() return v109;end)();break;end if (v106==(0 -0)) then local v122=(function() return 0 + 0 ;end)();while true do if (v122~=(2 -1)) then else v106=(function() return  #"~";end)();break;end if ((0 -0)==v122) then v107=(function() return v20(v69,869 -(550 + 317) , #"xnx");end)();v108=(function() return v20(v69, #"0313",8 -2 );end)();v122=(function() return 1 -0 ;end)();end end end if (v106==(5 -3)) then local v123=(function() return 285 -(134 + 151) ;end)();local v124=(function() return;end)();while true do if (v123==(1665 -(970 + 695))) then v124=(function() return 0;end)();while true do if (v124==0) then if (v20(v108, #"[", #",")~= #"[") then else v109[2]=(function() return v57[v109[3 -1 ]];end)();end if (v20(v108,1992 -(582 + 1408) ,6 -4 )~= #"{") then else v109[ #"xxx"]=(function() return v57[v109[ #"xnx"]];end)();end v124=(function() return 1;end)();end if (v124~=1) then else v106=(function() return  #"-19";end)();break;end end break;end end end if (v106== #"}") then local v125=(function() return 0 -0 ;end)();local v126=(function() return;end)();while true do if (0~=v125) then else v126=(function() return 0 -0 ;end)();while true do if (v126==(1825 -(1195 + 629))) then v106=(function() return 2;end)();break;end if (v126==(0 -0)) then v109=(function() return {v22(),v22(),nil,nil};end)();if (v107==0) then local v289=(function() return 0;end)();local v290=(function() return;end)();while true do if (v289~=(780 -(162 + 618))) then else v290=(function() return 0;end)();while true do if (v290==(0 + 0)) then v109[ #"xnx"]=(function() return v22();end)();v109[ #"0836"]=(function() return v22();end)();break;end end break;end end elseif (v107== #"]") then v109[ #"xxx"]=(function() return v23();end)();elseif (v107==(2 + 0)) then v109[ #"xnx"]=(function() return v23() -((3 -1)^16) ;end)();elseif (v107~= #"nil") then else local v361=(function() return 0 -0 ;end)();local v362=(function() return;end)();while true do if ((0 + 0)==v361) then v362=(function() return 1636 -(1373 + 263) ;end)();while true do if (0~=v362) then else v109[ #"19("]=(function() return v23() -(2^(1016 -(451 + 549))) ;end)();v109[ #"?id="]=(function() return v22();end)();break;end end break;end end end v126=(function() return 1;end)();end end break;end end end end break;end end end end for v70= #"!",v23() do v53,v70,v28=(function() return v51(v53,v70,v28);end)();end return v55;end local function v29(v59,v60,v61) local v62=v59[1 + 0 ];local v63=v59[1 + 1 ];local v64=v59[(509 -(351 + 154)) -1 ];return function(...) local v71=v62;local v72=v63;local v73=v64;local v74=v27;local v75=1 -0 ;local v76= -1;local v77={};local v78={...};local v79=v12("#",...) -(1385 -(746 + 638)) ;local v80={};local v81={};for v102=0,v79 do if (v102>=v73) then v77[v102-v73 ]=v78[v102 + 1 + 0 ];else v81[v102]=v78[v102 + (1 -(0 + 0)) ];end end local v82=(v79-v73) + ((1916 -(1281 + 293)) -(218 + 123)) ;local v83;local v84;while true do v83=v71[v75];v84=v83[1582 -(1535 + 46) ];if ((v84<=34) or (2512<432)) then if (v84<=(16 + 0)) then if (v84<=(2 + 5)) then if ((v84<=(563 -((572 -(28 + 238)) + 254))) or (705>3706)) then if ((v84<=(1 + (0 -0))) or (1848==865)) then if ((v84>(0 -0)) or (4682<=4541)) then v81[v83[1469 -(899 + 568) ]]=v81[v83[1562 -(1381 + 178) ]][v83[3 + 1 ]];else v81[v83[2]]=v81[v83[7 -(4 + 0) ]];end elseif (v84>(1 + 1)) then local v132=v83[(1120 -515) -(268 + (2246 -(340 + 1571))) ];local v133,v134=v74(v81[v132](v13(v81,v132 + (291 -(49 + 11 + 99 + 131)) ,v83[575 -(426 + 146) ])));v76=(v134 + v132) -(1 + 0) ;local v135=0;for v229=v132,v76 do local v230=(575 + 881) -(282 + 1174) ;while true do if (v230==(811 -(569 + (834 -592)))) then v135=v135 + (2 -1) ;v81[v229]=v133[v135];break;end end end else local v136=v83[1 + 1 ];v81[v136]=v81[v136](v81[v136 + (1025 -((2478 -(1733 + 39)) + 165 + 153)) ]);end elseif ((v84<=(1256 -(721 + 530))) or (3026>=4046)) then if ((2008>638) and (v84==(1275 -((2596 -1651) + (1360 -(125 + 909)))))) then local v138=0 -(1948 -(1096 + 852)) ;local v139;while true do if (v138==(0 + 0 + (470 -(381 + 89)))) then v139=v83[702 -((386 -115) + 429) ];v81[v139]=v81[v139](v13(v81,v139 + 1 + 0 ,v83[1503 -(1249 + 159 + 63 + 29) ]));break;end end else v81[v83[2]]=v81[v83[1089 -(461 + 625) ]][v83[(1254 + 38) -((1700 -707) + 295) ]];end elseif ((1775<=3233) and (v84==(1 + 5))) then v81[v83[1173 -(418 + 753) ]]=v81[v83[2 + 1 ]] * v81[v83[1 + (1159 -(1074 + 82)) ]] ;else for v231=v83[1 + (513 -(409 + 103)) ],v83[3] do v81[v231]=nil;end end elseif (v84<=(3 + 8)) then if ((3321>1695) and (v84<=(538 -(406 + 123)))) then if ((v84>8) or (1065<=90)) then do return;end elseif (v83[1771 -(1749 + 20) ]==v81[v83[(1 -0) + 3 ]]) then v75=v75 + (1323 -(1249 + 73)) ;else v75=v83[2 + 1 ];end elseif (v84==10) then local v143=1145 -(466 + 679) ;local v144;local v145;while true do if (v143==((236 -(46 + 190)) -0)) then v144=v83[5 -3 ];v145={};v143=1901 -(106 + 1794) ;end if ((4802==4802) and (v143==(1 + 0))) then for v320=1 + 0 , #v80 do local v321=0 -0 ;local v322;while true do if ((v321==(0 -(95 -(51 + 44)))) or (4543==1997)) then v322=v80[v320];for v350=114 -(4 + 110) , #v322 do local v351=584 -(57 + 527) ;local v352;local v353;local v354;while true do if (v351==(1427 -(41 + 391 + 995))) then v352=v322[v350];v353=v352[1];v351=(1421 -(1114 + 203)) -(17 + (812 -(228 + 498))) ;end if (v351==1) then v354=v352[2 + 0 ];if ((v353==v81) and (v354>=v144)) then local v369=0 -0 ;while true do if (v369==(0 -0)) then v145[v354]=v353[v354];v352[(1951 -(214 + 1570)) -(122 + 44) ]=v145;break;end end end break;end end end break;end end end break;end end else v81[v83[(1 + 1) -0 ]]= #v81[v83[(1464 -(990 + 465)) -6 ]];end elseif (v84<=(11 + 2)) then if (v84>(2 + 10)) then v81[v83[2]][v83[5 -2 ]]=v81[v83[4]];else v81[v83[67 -(30 + 20 + 15) ]]=v29(v72[v83[3]],nil,v61);end elseif (v84<=(10 + (667 -(174 + 489)))) then v81[v83[1259 -(1043 + 214) ]]= #v81[v83[(28 -17) -8 ]];elseif ((v84==(1227 -(323 + (2794 -(830 + 1075))))) or (3102<728)) then v81[v83[5 -3 ]]=v61[v83[583 -((885 -(303 + 221)) + 219) ]];else local v265=v83[322 -(53 + 267) ];v81[v265]=v81[v265](v13(v81,v265 + (1270 -(231 + 1038)) + 0 ,v83[(347 + 69) -(15 + 398) ]));end elseif ((v84<=(1007 -(18 + 964))) or (2280<=511)) then if (v84<=20) then if ((345==345) and (v84<=(67 -49))) then if ((v84==(10 + 7)) or (1676<=463)) then local v151=0 + 0 ;local v152;while true do if (v151==(850 -(20 + 830))) then v152=v83[2 + 0 ];v81[v152](v81[v152 + (127 -(116 + 10)) ]);break;end end else local v153=v83[2];v81[v153]=v81[v153](v13(v81,v153 + 1 + 0 ,v76));end elseif ((v84==((313 + 444) -(542 + 196))) or (2827<378)) then local v155=v83[3 -1 ];local v156=v81[v83[1 + (1164 -(171 + 991)) ]];v81[v155 + 1 ]=v156;v81[v155]=v156[v83[3 + 1 ]];else local v160=0 + 0 + 0 ;local v161;local v162;while true do if ((v160==((0 -0) -0)) or (3476<2597)) then v161=v83[7 -4 ];v162=v81[v161];v160=1552 -(1126 + 425) ;end if ((3079<4794) and (v160==1)) then for v323=v161 + 1 ,v83[409 -(118 + 287) ] do v162=v162   .. v81[v323] ;end v81[v83[2]]=v162;break;end end end elseif ((4854>4464) and (3869==3869) and (v84<=((84 + 2) -64))) then if (v84==((3066 -1924) -(118 + 1003))) then v81[v83[5 -3 ]]={};else v81[v83[4 -2 ]]=v83[380 -(142 + 235) ];end elseif ((v84<=(19 + 4)) or (4912==3758)) then local v166=v83[2];v81[v166]=v81[v166](v13(v81,v166 + (4 -3) ,v76));elseif ((1158<=2613) and (v84==(6 + 18))) then if  not v81[v83[979 -(553 + 424) ]] then v75=v75 + (1 -0) ;else v75=v83[3 + 0 ];end else local v267=v83[7 -5 ];v81[v267](v13(v81,v267 + 1 ,v83[(10 -7) + 0 ]));end elseif ((126<=3482) and (v84<=(17 + 12))) then if ((v84<=27) or (2364<=1999)) then if (v84==((34 -22) + 14)) then local v168=v72[v83[2 + 1 ]];local v169;local v170={};v169=v10({},{__index=function(v233,v234) local v235=0 -0 ;local v236;while true do if (v235==(0 -0)) then v236=v170[v234];return v236[2 -1 ][v236[2]];end end end,__newindex=function(v237,v238,v239) local v240=0 + 0 ;local v241;while true do if (v240==(0 -0)) then v241=v170[v238];v241[754 -(239 + 514) ][v241[1 + 1 ]]=v239;break;end end end});for v242=1330 -(797 + 532) ,v83[10 -6 ] do v75=v75 + 1 + (0 -0) ;local v243=v71[v75];if ((v243[1]==63) or (2374==4374)) then v170[v242-1 ]={v81,v243[3]};else v170[v242-1 ]={v60,v243[1205 -(373 + 829) ]};end v80[ #v80 + (732 -(476 + (413 -(91 + 67)))) ]=v170;end v81[v83[1132 -((762 -393) + 761) ]]=v29(v168,v169,v61);else local v172=0 + 0 ;local v173;local v174;local v175;while true do if (v172==(1 -0)) then v175=0 -0 ;for v328=v173,v83[242 -((222 -158) + 174) ] do v175=v175 + (2 -1) ;v81[v328]=v174[v175];end break;end if ((v172==(0 + 0)) or (4922<194)) then v173=v83[2 -0 ];v174={v81[v173](v81[v173 + (217 -(42 + 174)) ])};v172=1 + 0 + 0 ;end end end elseif ((1575==1575) and (v84==(24 + 4))) then if ((v81[v83[1 + 1 ]]==v83[(377 + 1131) -(363 + 1141) ]) or (2091<31)) then v75=v75 + (1581 -(1183 + 397)) ;else v75=v83[3];end else local v176=0 -0 ;local v177;local v178;local v179;local v180;while true do if (v176==(2 + 0)) then for v331=v177,v76 do v180=v180 + 1 + 0 ;v81[v331]=v178[v180];end break;end if ((v176==(1975 -(1913 + 62))) or (2234==1455)) then v177=v83[2 + 0 ];v178,v179=v74(v81[v177](v13(v81,v177 + 1 ,v83[(530 -(423 + 100)) -4 ])));v176=1934 -((1905 -1340) + 1368) ;end if (v176==(3 -2)) then v76=(v179 + v177) -(1662 -(1477 + 184)) ;v180=0 + 0 ;v176=2 -0 ;end end end elseif (v84<=(29 + 2)) then if (v84==(886 -(564 + 292))) then local v181=0 -0 ;local v182;local v183;while true do if (v181==(2 -1)) then for v334=v182 + 1 ,v83[308 -(244 + (166 -106)) ] do v183=v183   .. v81[v334] ;end v81[v83[2 + 0 ]]=v183;break;end if (((249 + 227) -(41 + 435))==v181) then v182=v83[1004 -(938 + 63) ];v183=v81[v182];v181=1;end end elseif (v81[v83[(1996 -(109 + 1885)) + 0 ]]~=v81[v83[(1900 -(326 + 445)) -(936 + (824 -635)) ]]) then v75=v75 + 1 + 0 ;else v75=v83[1616 -(1565 + 48) ];end elseif ((v84<=32) or (2430>=4872)) then local v184=v83[2 + 0 ];v81[v184](v13(v81,v184 + (1139 -(782 + 356)) ,v83[270 -(176 + 91) ]));elseif (v84>(72 -39)) then v81[v83[4 -2 ]][v83[3]]=v81[v83[5 -1 ]];elseif ((v83[2]<v81[v83[1096 -(975 + 117) ]]) or (1067>1779)) then v75=v75 + (1876 -(157 + 1718)) ;else v75=v83[3 + 0 ];end elseif ((2161>=934) and ((v84<=((1649 -(1269 + 200)) -129)) or (4770<1735))) then if ((v84<=(143 -(193 -92))) or (4439<=2350)) then if ((v84<=((2464 -1408) -(697 + 321))) or (4479<4466)) then if ((2547>1225) and (v84<=36)) then if (v84>35) then local v185=v83[5 -3 ];v81[v185](v81[v185 + (1 -(711 -(530 + 181))) ]);else v81[v83[4 -2 ]]=v60[v83[2 + 1 ]];end elseif ((1612==1612) and (4671>2674) and (v84>((884 -(98 + 717)) -32))) then if ((4352>=2833) and v81[v83[5 -(884 -(614 + 267)) ]]) then v75=v75 + (1228 -(322 + 905)) ;else v75=v83[3];end else local v188=v83[2];v81[v188]=v81[v188]();end elseif ((v84<=(651 -(602 + 9))) or (3222<3073)) then if ((744<=2942) and (v84>((1260 -(19 + 13)) -(449 + 740)))) then local v190=872 -(826 + 46) ;local v191;local v192;while true do if ((v190==(948 -(245 + (1528 -(802 + 24))))) or (3696<3327)) then for v336=3 -2 , #v80 do local v337=0 + (0 -0) ;local v338;while true do if (v337==(1898 -(260 + 1638))) then v338=v80[v336];for v355=440 -(382 + (94 -36)) , #v338 do local v356=v338[v355];local v357=v356[(3 -0) -2 ];local v358=v356[2 + 0 ];if ((v357==v81) and (v358>=v191)) then v192[v358]=v357[v358];v356[1 -0 ]=v192;end end break;end end end break;end if (v190==(0 -(0 -0))) then v191=v83[1207 -(134 + 768 + 233 + 70) ];v192={};v190=1 -(0 + 0) ;end end else v81[v83[4 -2 ]]=v81[v83[3]] * v81[v83[1 + 3 ]] ;end elseif (v84>((3044 -1313) -(1121 + 569))) then local v194=v83[(447 -231) -(22 + 192) ];local v195=v83[687 -(80 + 403 + 200) ];local v196=v194 + (1465 -(1404 + 59)) ;local v197={v81[v194](v81[v194 + (2 -1) ],v81[v196])};for v245=1 -0 ,v195 do v81[v196 + v245 ]=v197[v245];end local v198=v197[766 -(468 + 297) ];if v198 then v81[v196]=v198;v75=v83[3];else v75=v75 + (563 -((929 -595) + 228)) ;end else v75=v83[10 -7 ];end elseif ((v84<=(106 -60)) or (4542==2970)) then if ((v84<=(79 -35)) or (1833<=1322)) then if (v84==(13 + 30)) then local v200=v72[v83[239 -(141 + (316 -221)) ]];local v201;local v202={};v201=v10({},{__index=function(v248,v249) local v250=v202[v249];return v250[1 + 0 ][v250[4 -2 ]];end,__newindex=function(v251,v252,v253) local v254=v202[v252];v254[1][v254[4 -2 ]]=v253;end});for v256=1 + 0 ,v83[1 + 0 + 3 ] do local v257=0;local v258;while true do if ((252<=1977) and (v257==0)) then v75=v75 + (2 -(1 + 0)) ;v258=v71[v75];v257=1 + 0 ;end if (v257==(1 + 0)) then if (v258[1 -0 ]==((98 -60) + 25)) then v202[v256-(164 -(92 + (135 -64))) ]={v81,v258[3]};else v202[v256-(1 -0) ]={v60,v258[3 + 0 ]};end v80[ #v80 + 1 + 0 ]=v202;break;end end end v81[v83[4 -2 ]]=v29(v200,v201,v61);else v81[v83[1 + 1 + 0 + 0 ]]=v61[v83[852 -(254 + 595) ]];end elseif (v84>45) then v81[v83[128 -(55 + (1504 -(797 + 636))) ]]=v60[v83[3 -(0 -0) ]];elseif ((v81[v83[1792 -(573 + 1217) ]]==v83[10 -6 ]) or (3467<=1055)) then v75=v75 + 1 ;else v75=v83[3];end elseif ((3541==3541) and (v84<=(4 + 9 + 35))) then if ((v84>(74 -27)) or (3557>=4003)) then local v208=v83[941 -(714 + (522 -297)) ];v81[v208]=v81[v208](v81[v208 + 1 ]);else v81[v83[1621 -(1427 + 192) ]][v83[8 -5 ]]=v83[5 -(1 + 0) ];end elseif ((v84<=((13 -7) + 10 + 33)) or (657>=1668)) then local v212=v83[2 -0 ];local v213={v81[v212](v81[v212 + (49 -(25 + 23)) ])};local v214=0 + 0 + 0 ;for v259=v212,v83[(1182 + 708) -(927 + 959) ] do v214=v214 + ((1099 -(709 + 387)) -2) ;v81[v259]=v213[v214];end elseif ((v84==(782 -((1874 -(673 + 1185)) + 716))) or (1027>3858)) then v81[v83[3 -(2 -1) ]]=v81[v83[100 -((35 -24) + 86) ]] + v81[v83[9 -(5 + 0) ]] ;else local v277=v83[2];local v278=v83[289 -((287 -112) + 110) ];local v279=v277 + (4 -2) ;local v280={v81[v277](v81[v277 + (1797 -(503 + 1293)) ],v81[v279])};for v306=2 -1 ,v278 do v81[v279 + v306 ]=v280[v306];end local v281=v280[1 + 0 + 0 ];if (v281 or (1436==3775)) then v81[v279]=v281;v75=v83[(1390 -(192 + 134)) -(810 + 251) ];else v75=v75 + 1 ;end end elseif (v84<=60) then if (v84<=(39 + 16)) then if ((v84<=(17 + 36)) or (1618<930) or (3654<450)) then if (v84>(47 + (1281 -(316 + 960)))) then v81[v83[535 -(43 + 273 + 217) ]]();else v81[v83[735 -(711 + 22) ]]=v29(v72[v83[11 -8 ]],nil,v61);end elseif ((1891<4453) and (4723>4153) and (v84>(913 -(240 + 619)))) then v81[v83[1 + 0 + (1 -0) ]][v83[4 -(1 + 0) ]]=v83[1 + 0 + 3 ];else local v218=(429 + 1315) -((5138 -3794) + 400) ;local v219;while true do if ((((807 -402) -((500 -245) + 150))==v218) or (3654>=4654)) then v219=v83[2 + (551 -(83 + 468)) ];v81[v219]=v81[v219]();break;end end end elseif (v84<=((1911 -(446 + 1434)) + (1309 -(1040 + 243)))) then if (v84==(239 -183)) then v75=v83[9 -6 ];elseif ((951<=1496) and v81[v83[2]]) then v75=v75 + (1740 -(404 + 1335)) ;else v75=v83[409 -(183 + (665 -442)) ];end elseif ((v84<=(69 -11)) or (1736==571)) then local v221=0 + 0 ;local v222;local v223;while true do if (v221==(0 + 0)) then v222=v83[2];v223=v81[v83[340 -(10 + 327) ]];v221=1;end if ((v221==1) or (896>4769)) then v81[v222 + (1848 -(559 + 1288)) + 0 ]=v223;v81[v222]=v223[v83[342 -((2049 -(609 + 1322)) + (674 -(13 + 441))) ]];break;end end elseif (v84==(20 + 39)) then v81[v83[(1685 -1234) -(108 + 341) ]]();elseif ((v83[2]==v81[v83[(5 -3) + 2 ]]) or (1045<=1020) or (3140<2129)) then v75=v75 + (4 -(14 -11)) ;else v75=v83[(56 + 1440) -(711 + 782) ];end elseif ((v84<=(122 -58)) or (1160<=328)) then if ((v84<=62) or (2555<1240)) then if (v84==((1924 -1394) -(270 + 71 + 128))) then v81[v83[2]]={};elseif ( not v81[v83[2]] or (4727<=4722)) then v75=v75 + 1 + 0 ;else v75=v83[1822 -(580 + 1239) ];end elseif ((3808>2924) and (v84==((1993 -(1202 + 604)) -124))) then v81[v83[2 + 0 ]]=v81[v83[1 + 2 ]];else v81[v83[2]]=v83[3];end elseif ((740<4937) and (3891<4919) and (v84<=66)) then if ((3658>=280) and (v84==65)) then do return;end elseif (v83[2]<v81[v83[(9 -7) + 2 ]]) then v75=v75 + 1 ;else v75=v83[(11 -4) -4 ];end elseif ((v84<=(42 + 25)) or (2234<=1502) or (885>=1031)) then if (v81[v83[1169 -(645 + 522) ]]~=v81[v83[1794 -(1010 + 780) ]]) then v75=v75 + 1 + 0 ;else v75=v83[14 -(30 -19) ];end elseif ((3554>=525) and (v84>(199 -131))) then for v316=v83[(2163 -(45 + 280)) -(1045 + 791) ],v83[3] do v81[v316]=nil;end else v81[v83[2]]=v81[v83[7 -4 ]] + v81[v83[4]] ;end v75=v75 + (1 -(0 + 0)) ;end end;end return v29(v28(),{},v17)(...);end return v15("LOL!",v9(),...);
